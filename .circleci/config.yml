version: 2.1 # use CircleCI 2.0

defaults: &defaults
  environment: &environment
    CIRCLE_TEST_REPORTS: /tmp/test-results
    CIRCLE_ARTIFACTS: /tmp/test-artifacts
    BUNDLE_JOBS: 4
    BUNDLE_RETRY: 3
    BUNDLE_PATH: ~/spree/vendor/bundle
    RAILS_VERSION: '~> 7.0'
  working_directory: ~/spree
  docker:
    - image: &ruby_2_7_image circleci/ruby:2.7-node-browsers
    - image: &redis_image circleci/redis:6.2-alpine

defaults_3_0: &defaults_3_0
  <<: *defaults
  docker:
    - image: &ruby_3_0_image circleci/ruby:3.0-node-browsers
    - image: *redis_image

run_tests_2_7: &run_tests_2_7
  <<: *defaults
  parallelism: 3
  steps:
    - checkout
    - restore_cache:
        keys:
          - spree-bundle-v10-ruby-2-7-{{ .Branch }}
          - spree-bundle-v10-ruby-2-7
    - run:
        name: Ensure Bundle Install
        command: |
          bundle install
          ./bin/build-ci.rb install
    - run:
        name: Run rspec in parallel
        command: ./bin/build-ci.rb test
    - store_artifacts:
        path: /tmp/test-artifacts
        destination: test-artifacts
    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    - store_test_results:
        path: /tmp/test-results

run_tests_3_0: &run_tests_3_0
  <<: *defaults_3_0
  parallelism: 3
  steps:
    - checkout
    - restore_cache:
        keys:
          - spree-bundle-v10-ruby-3-0-{{ .Branch }}
          - spree-bundle-v10-ruby-3-0
    - run:
        name: Ensure Bundle Install
        command: |
          bundle install
          ./bin/build-ci.rb install
    - run:
        name: Run rspec in parallel
        command: ./bin/build-ci.rb test
    - store_artifacts:
        path: /tmp/test-artifacts
        destination: test-artifacts
    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    - store_test_results:
        path: /tmp/test-results

jobs:
  bundle_ruby_2_7:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-bundle-v10-ruby-2-7-{{ .Branch }}
            - spree-bundle-v10-ruby-2-7
      - run:
          name: Bundle Install
          command: |
            bundle check || bundle install
            ./bin/build-ci.rb install
      - save_cache:
          key: spree-bundle-v10-ruby-2-7-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/spree/vendor/bundle

  bundle_ruby_3_0:
    <<: *defaults_3_0
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-bundle-v10-ruby-3-0-{{ .Branch }}
            - spree-bundle-v10-ruby-3-0
      - run:
          name: Bundle Install
          command: |
            bundle check || bundle install
            ./bin/build-ci.rb install
      - save_cache:
          key: spree-bundle-v10-ruby-3-0-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/spree/vendor/bundle

  brakeman:
    <<: *defaults_3_0
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-brakeman-{{ .Branch }}
            - spree-brakeman
      - run:
          name: Ensure Bundle Install
          command: |
            bundle install
            ./bin/build-ci.rb install
      - run:
          name: Run Brakeman spree/api
          command: |
            bundle exec brakeman -p api/ --skip-files app/controllers/spree/api/v1/ --exit-on-warn --exit-on-error
      - run:
          name: Run Brakeman spree/core
          command: |
            bundle exec brakeman -p core/ --ignore-config core/brakeman.ignore --exit-on-warn --exit-on-error
      - save_cache:
          key: spree-brakeman-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/spree/vendor/bundle

  tests_ruby_2_7_rails_7_0_postgres: &tests_ruby_2_7_rails_7_0_postgres
    <<: *run_tests_2_7
    environment: &postgres_environment
      <<: *environment
      DB: postgres
      DB_HOST: localhost
      DB_USERNAME: postgres
    docker:
      - image: *ruby_2_7_image
      - image: *redis_image
      - image: &postgres_image circleci/postgres:12-alpine
        environment:
          POSTGRES_USER: postgres

  tests_ruby_3_0_rails_7_0_postgres:
    <<: *run_tests_3_0
    environment:
      <<: *postgres_environment
    docker:
      - image: *ruby_3_0_image
      - image: *postgres_image
      - image: *redis_image

  tests_ruby_2_7_rails_6_1_postgres:
    <<: *tests_ruby_2_7_rails_7_0_postgres
    environment:
      <<: *postgres_environment
      RAILS_VERSION: '~> 6.1.0'

  tests_ruby_3_0_rails_7_0_mysql:
    <<: *run_tests_3_0
    environment:
      <<: *environment
      DB: mysql
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
      COVERAGE: true
      COVERAGE_DIR: /tmp/workspace/simplecov
    docker:
      - image: *ruby_3_0_image
      - image: *redis_image
      - image: circleci/mysql:8-ram
        command: [--default-authentication-plugin=mysql_native_password]
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-bundle-v10-ruby-3-0-{{ .Branch }}
            - spree-bundle-v10-ruby-3-0
      - run:
          name: Ensure Bundle Install
          command: |
            bundle install
            ./bin/build-ci.rb install
      - run:
          name: Run rspec in parallel
          command: ./bin/build-ci.rb test
      - store_artifacts:
          path: /tmp/test-artifacts
          destination: test-artifacts
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - simplecov

  send_test_coverage:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - run:
          name: Setup ENVs
          command: |
            export GIT_BRANCH="$CIRCLE_BRANCH"
            export GIT_COMMIT_SHA="$CIRCLE_SHA1"
            export GIT_COMMITTED_AT="$(date +%s)"
      - run:
          name: Format test coverage
          command: |
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.api.json /tmp/workspace/simplecov/api/.resultset.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.core.json /tmp/workspace/simplecov/core/.resultset.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.emails.json /tmp/workspace/simplecov/emails/.resultset.json
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 3 -o tmp/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json

workflows:
  version: 2
  main:
    jobs:
      - bundle_ruby_2_7
      - bundle_ruby_3_0
      - brakeman:
          requires:
            - bundle_ruby_3_0
      - tests_ruby_3_0_rails_7_0_postgres:
          requires:
            - bundle_ruby_3_0
      - tests_ruby_2_7_rails_7_0_postgres:
          requires:
            - bundle_ruby_2_7
      - tests_ruby_2_7_rails_6_1_postgres:
          requires:
            - bundle_ruby_2_7
      - tests_ruby_3_0_rails_7_0_mysql:
          requires:
            - bundle_ruby_3_0
      - send_test_coverage:
          requires:
            - tests_ruby_3_0_rails_7_0_mysql
